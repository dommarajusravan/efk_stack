image:
  repository: artifactory.galleon.c.statestr.com/docker/x/grafana
  tag: 5.3.1
  pullPolicy: IfNotPresent

downloadDashboardsImage:
  repository: artifactory.galleon.c.statestr.com/docker/x/curl
  tag: latest
  #pullPolicy: IfNotPresent

securityContext:
  # runAsUser: 472
  # fsGroup: 472


initChownData:
  ## If false, data ownership will not be reset at startup
  ## This allows the prometheus-server to be run with an arbitrary user
  ##
  enabled: true

  ## initChownData container image
  ##
  image:
    repository: artifactory.galleon.c.statestr.com/docker/x/busybox
    tag: "1.29"

# Administrator credentials when not using an existing secret (see below)
adminUser: admin
adminPassword: admin123

## Configure grafana datasources
## ref: http://docs.grafana.org/administration/provisioning/#datasources
##
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://sre-prometheus-server.sre-monitoring-logging.svc.cluster.local
      access: proxy
      isDefault: true

## Configure grafana dashboard providers
## ref: http://docs.grafana.org/administration/provisioning/#dashboards
##
## `path` must be /var/lib/grafana/dashboards/<provider_name>
##
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: 'test'
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards/default

## Configure grafana dashboard to import
## NOTE: To use dashboards you must also enable/configure dashboardProviders
## ref: https://grafana.com/dashboards
##
## dashboards per provider, use provider name as key.
##
dashboards:
  default:
    #some-dashboard:
    #  json: |
    #    $RAW_JSON
    #custom-dashboard:
    #  file: dashboards/test.json
    k8s-cluster-summary:
      file: dashboards/k8s-cluster-summary_rev1.json
